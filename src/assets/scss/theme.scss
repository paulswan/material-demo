@use '@angular/material' as mat;
@use './variables.scss';
@use './typography.scss';

@include mat.strong-focus-indicators();

// Required as strong-focus-indicators-theme() is causing problems on Stackblitz when used multiple times
mat.$theme-ignore-duplication-warnings: true;

$nextdc-red-palette: (
  50: #ffeaed,
  100: #ffcbd0,
  200: #ef9796,
  300: #e46f6d,
  400: #ee4e48,
  500: #f23d2c,
  600: variables.$main-accent,
  700: #d12726,
  800: #c41f1f,
  900: #b61012,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

$nextdc-grey-palette: (
  50: #f7f8fe,
  100: #f0f1f7,
  200: #e6e7ed,
  300: #d5d7dc,
  400: #b1b3b8,
  500: #919298,
  600: #696a70,
  700: variables.$main-dark,
  800: #38393d,
  900: #18191d,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

$nextdc-orange-palette: (
  50: #fff3e0,
  100: #ffe0b2,
  200: #ffcd80,
  300: #ffb84d,
  400: #ffa826,
  500: variables.$product-color,
  600: #fb8d00,
  700: #f57d00,
  800: #ef6d00,
  900: #e65200,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: rgba(black, 0.87),
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

$cocoon-purple-palette: (
  50: #eee1ef,
  100: #d5b5d9,
  200: #b985c1,
  300: #9e56a8,
  400: #8a3497,
  500: #770d86,
  600: #6b0b81,
  700: #5a0779,
  800: #4b0471,
  900: variables.$cocoondata-purple,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

$cocoon-green-palette: (
  50: #f2ffee,
  100: #dfffd5,
  200: variables.$cocoondata-green,
  300: #b5fe9e,
  400: #9cfa83,
  500: #93f775,
  600: #83e56b,
  700: #6ece5f,
  800: #5ab955,
  900: #359543,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: rgba(black, 0.87),
    600: rgba(black, 0.87),
    700: rgba(black, 0.87),
    800: rgba(black, 0.87),
    900: white,
  ),
);

$cocoon-yellow-palette: (
  50: #ffffe9,
  100: #fcfbc7,
  200: #faf8a1,
  300: variables.$cocoondata-yellow,
  400: #fcf664,
  500: #f9f147,
  600: #fee546,
  700: #fccd3b,
  800: #fbb531,
  900: #f88d1e,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: rgba(black, 0.87),
    600: rgba(black, 0.87),
    700: rgba(black, 0.87),
    800: rgba(black, 0.87),
    900: rgba(black, 0.87),
  ),
);

@mixin set-theme($theme) {
  @include mat.core-theme($theme);
  @include mat.button-theme($theme);
  @include mat.all-component-themes($theme);
  @include mat.strong-focus-indicators-theme($theme);
}

@mixin set-color($theme) {
  @include mat.core-color($theme);
  @include mat.button-color($theme);
  @include mat.all-component-colors($theme);
  @include mat.strong-focus-indicators-theme($theme);
}

// Define NextDC light theme
$nextdc-light-primary: mat.define-palette($nextdc-red-palette, 600);
$nextdc-light-accent: mat.define-palette($nextdc-grey-palette, 700);
$nextdc-light-warn: mat.define-palette($nextdc-orange-palette, 500);
$nextdc-light-theme: mat.define-light-theme(
  (
    color: (
      primary: $nextdc-light-primary,
      accent: $nextdc-light-accent,
      warn: $nextdc-light-warn,
    ),
  )
);

// Apply the NextDC light theme by default
@include set-theme($nextdc-light-theme);

// Define NextDC light theme
$nextdc-alt-light-primary: mat.define-palette($nextdc-grey-palette, 700);
$nextdc-alt-light-accent: mat.define-palette($nextdc-red-palette, 600);
$nextdc-alt-light-warn: mat.define-palette($nextdc-red-palette, 900);
$nextdc-alt-light-theme: mat.define-light-theme(
  (
    color: (
      primary: $nextdc-alt-light-primary,
      accent: $nextdc-alt-light-accent,
      warn: $nextdc-alt-light-warn,
    ),
  )
);

.nextdc-alt-light-theme {
  @include set-color($nextdc-alt-light-theme);
}

// Define a light theme
$light-primary: mat.define-palette($cocoon-purple-palette, 900);
$light-accent: mat.define-palette($cocoon-green-palette, 200);
$light-warn: mat.define-palette($cocoon-yellow-palette, 300);
$light-theme: mat.define-light-theme(
  (
    color: (
      primary: $light-primary,
      accent: $light-accent,
      warn: $light-warn,
    ),
    typography: typography.$inter-typography,
  )
);

.light-theme {
  @include set-color($light-theme);
}

// Define an alternative light theme
$alt-light-primary: mat.define-palette($cocoon-purple-palette, 400);
$alt-light-accent: mat.define-palette($cocoon-green-palette, 900);
$alt-light-warn: mat.define-palette($cocoon-yellow-palette, 700);
$alt-light-theme: mat.define-light-theme(
  (
    color: (
      primary: $alt-light-primary,
      accent: $alt-light-accent,
      warn: $alt-light-warn,
    ),
    typography: typography.$inter-typography,
  )
);

.alt-light-theme {
  @include set-color($alt-light-theme);
}

// // Define a dark theme
// $dark-primary: mat.define-palette($cocoon-purple-palette, 900);
// $dark-accent: mat.define-palette($cocoon-green-palette, 200);
// $dark-warn: mat.define-palette($cocoon-yellow-palette, 300);
// $dark-theme: mat.define-dark-theme(
//   (
//     color: (
//       primary: $dark-primary,
//       accent: $dark-accent,
//       warn: $dark-warn,
//     ),
//     typography: typography.$inter-typography,
//   )
// );
// .dark-theme {
//   @include set-color($dark-theme);
// }

// Define an alternative dark theme
$alt-dark-primary: mat.define-palette($cocoon-purple-palette, 300);
$alt-dark-accent: mat.define-palette($cocoon-green-palette, 400);
$alt-dark-warn: mat.define-palette($cocoon-yellow-palette, 400);
$alt-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $alt-dark-primary,
      accent: $alt-dark-accent,
      warn: $alt-dark-warn,
    ),
    typography: typography.$inter-typography,
  )
);

.alt-dark-theme {
  @include set-color($alt-dark-theme);
}

// Define light themes from pre-built palettes
// deeppurple-amber
$deeppurple-amber-light-primary: mat.define-palette(mat.$deep-purple-palette);
$deeppurple-amber-light-accent: mat.define-palette(mat.$amber-palette);
$deeppurple-amber-light-theme: mat.define-light-theme(
  (
    color: (
      primary: $deeppurple-amber-light-primary,
      accent: $deeppurple-amber-light-accent,
    ),
    typography: typography.$inter-typography,
  )
);

.deeppurple-amber-light-theme {
  @include set-color($deeppurple-amber-light-theme);
}

// indigo-pink
$indigo-pink-light-primary: mat.define-palette(mat.$indigo-palette);
$indigo-pink-light-accent: mat.define-palette(mat.$pink-palette);
$indigo-pink-light-theme: mat.define-light-theme(
  (
    color: (
      primary: $indigo-pink-light-primary,
      accent: $indigo-pink-light-accent,
    ),
    typography: typography.$inter-typography,
  )
);

.indigo-pink-light-theme {
  @include set-color($indigo-pink-light-theme);
}

// Define dark themes from pre-built palettes
// pink-bluegrey
$pink-bluegrey-dark-primary: mat.define-palette(mat.$pink-palette);
$pink-bluegrey-dark-accent: mat.define-palette(mat.$blue-grey-palette);
$pink-bluegrey-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $pink-bluegrey-dark-primary,
      accent: $pink-bluegrey-dark-accent,
    ),
    typography: typography.$inter-typography,
  )
);

.pink-bluegrey-dark-theme {
  @include set-color($pink-bluegrey-dark-theme);
}

// purple-green
$purple-green-dark-primary: mat.define-palette(mat.$purple-palette);
$purple-green-dark-accent: mat.define-palette(mat.$green-palette);
$purple-green-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $purple-green-dark-primary,
      accent: $purple-green-dark-accent,
    ),
    typography: typography.$inter-typography,
  )
);

.purple-green-dark-theme {
  @include set-color($purple-green-dark-theme);
}

@function modify-background($theme, $background-palette) {
  // Replace the background in the color object's background palette.
  $theme-color: map-get($theme, color);
  $color-background-palette: map-get($theme-color, background);
  $color-background-palette: map-merge($color-background-palette, $background-palette);

  // Replace the background in the background palette.
  $background-palette: map-get($theme, background);
  $background-palette: map-merge($color-background-palette, $background-palette);

  // Merge the changes into a new theme.
  $modified-theme-color: map-merge(
    $theme-color,
    (
      background: $color-background-palette,
    )
  );
  $modified-theme: map-merge(
    $theme,
    (
      color: $modified-theme-color,
    )
  );
  $modified-theme: map-merge(
    $modified-theme,
    (
      background: $background-palette,
    )
  );

  @return $modified-theme;
}

$modified-background-palette: (
  background: variables.$cocoondata-purple,
  app-bar: darken(variables.$cocoondata-purple, 5%),
  card: map-get($cocoon-purple-palette, 800),
  dialog: map-get($cocoon-purple-palette, 800),
  raised-button: map-get($cocoon-purple-palette, 800),
  selected-button: darken(variables.$cocoondata-purple, 5%),
  selected-disabled-button: map-get($cocoon-purple-palette, 800),
  unselected-chip: map-get($cocoon-purple-palette, 700),
  tooltip: map-get($cocoon-purple-palette, 700),
);

$modified-green-dark-primary: mat.define-palette($cocoon-green-palette, 200);
$modified-green-dark-accent: mat.define-palette($cocoon-yellow-palette, 300);
$modified-green-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $modified-green-dark-primary,
      accent: $modified-green-dark-accent,
    ),
    typography: typography.$inter-typography,
  )
);
$modified-green-dark-theme: modify-background($modified-green-dark-theme, $modified-background-palette);

.modified-green-dark-theme {
  @include set-color($modified-green-dark-theme);

  .mat-snack-bar-container {
    background: map-get($cocoon-purple-palette, 100);
  }
}

$modified-yellow-dark-primary: mat.define-palette($cocoon-yellow-palette, 300);
$modified-yellow-dark-accent: mat.define-palette($cocoon-green-palette, 200);
$modified-yellow-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $modified-yellow-dark-primary,
      accent: $modified-yellow-dark-accent,
    ),
    typography: typography.$inter-typography,
  )
);
$modified-yellow-dark-theme: modify-background($modified-yellow-dark-theme, $modified-background-palette);

.modified-yellow-dark-theme {
  @include set-color($modified-yellow-dark-theme);

  .mat-snack-bar-container {
    background: map-get($cocoon-purple-palette, 100);
  }
}
